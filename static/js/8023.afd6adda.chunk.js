"use strict";(self.webpackChunkn2_trees=self.webpackChunkn2_trees||[]).push([[8023],{28023:(e,t,s)=>{s.r(t),s.d(t,{execute:()=>n});var a=s(1413),r=s(10064);function n(e,t){let s=t.responseType;s?"array-buffer"!==s&&"blob"!==s&&"json"!==s&&"native"!==s&&"native-request-init"!==s&&"text"!==s&&(s="text"):s="json",t.responseType=s;const n=t.signal;return delete t.signal,globalThis.invokeStaticMessage("request",{url:e,options:t},{signal:n}).then((async o=>{let u,i,l,c,b;if(o.data)if(o.data instanceof ArrayBuffer){if(!("json"!==s&&"text"!==s&&"blob"!==s||(u=new Blob([o.data]),"json"!==s&&"text"!==s||(c=await u.text(),"json"!==s)))){try{i=JSON.parse(c||null)}catch(p){const s=(0,a.Z)((0,a.Z)({},p),{},{url:e,requestOptions:t});throw new r.Z("request:server",p.message,s)}if(i.error){const s=(0,a.Z)((0,a.Z)({},i.error),{},{url:e,requestOptions:t});throw new r.Z("request:server",i.error.message,s)}}}else"native"===s&&(o.data.signal=n,l=await fetch(o.data.url,o.data),o.httpStatus=l.status);switch(s){case"blob":b=u;break;case"json":b=i;break;case"native":b=l;break;case"text":b=c;break;default:b=o.data}return{data:b,httpStatus:o.httpStatus,requestOptions:t,ssl:o.ssl,url:e}}))}}}]);
//# sourceMappingURL=8023.afd6adda.chunk.js.map