"use strict";(self.webpackChunkn2_trees=self.webpackChunkn2_trees||[]).push([[2403],{72403:(e,t,n)=>{n.r(t),n.d(t,{default:()=>Z});var i=n(27366),r=n(76200),o=n(10064),a=n(32718),s=n(16889),l=n(97642),p=n(66978),u=n(49861),f=(n(93169),n(84936),n(69912)),c=n(32035),d=n(12400),y=n(83448),h=n(53866),m=n(78952),v=n(50628),g=n(30651),x=n(27961),b=n(11936),_=n(46671),w=n(6061),I=n(29598),z=n(56811),A=n(45948),E=n(74509);let L=class extends((0,b.Y)((0,w.q)((0,I.I)((0,z.M)((0,l.R)((0,_.N)((0,x.V)(g.Z)))))))){constructor(e){super(e),this.operationalLayerType="IntegratedMesh3DTilesLayer",this.spatialReference=new m.Z({wkid:4326,vcsWkid:115700}),this.fullExtent=new h.Z(-180,-90,180,90,this.spatialReference),this.url=null,this.type="integrated-mesh-3dtiles",this.path=null,this.minScale=0,this.maxScale=0}set elevationInfo(e){this._set("elevationInfo",e),this._validateElevationInfo()}_verifyArray(e,t){if(!Array.isArray(e)||e.length<t)return!1;for(const n of e)if("number"!=typeof n)return!1;return!0}_initFullExtent(e){var t,n;const i=null===(t=e.root)||void 0===t?void 0:t.boundingVolume;if(!i)return;if(i.box){const e=null===i||void 0===i?void 0:i.box;if(e[3]>7972671&&e[7]>7972671&&e[11]>7945940)return}const r=null===(n=e.root)||void 0===n?void 0:n.transform,o=(0,d.Ue)();if(i.region&&this._verifyArray(i.region,6)){const e=i.region,t=(0,s.BV)(e[0]),n=(0,s.BV)(e[1]),r=e[4],o=(0,s.BV)(e[2]),a=(0,s.BV)(e[3]),l=e[5];this.fullExtent=new h.Z({xmin:t,ymin:n,zmin:r,xmax:o,ymax:a,zmax:l,spatialReference:this.spatialReference})}else if(i.sphere&&this._verifyArray(i.sphere,4)){const e=i.sphere,t=(0,d.al)(e[0],e[1],e[2]),n=e[3]/Math.sqrt(3),a=(0,d.Ue)();(0,c.f)(a,t,(0,d.al)(-n,-n,-n));const s=(0,d.Ue)();if((0,c.g)(s,t,(0,d.al)(n,n,n)),r&&this._verifyArray(r,16)){const e=r;(0,c.e)(o,a,e),(0,c.c)(a,o),(0,c.e)(o,s,e),(0,c.c)(s,o)}(0,v.projectBuffer)(a,y.pn,0,a,m.Z.WGS84,0,1),(0,v.projectBuffer)(s,y.pn,0,s,m.Z.WGS84,0,1);const l=(0,d.Ue)(),p=(0,d.Ue)();(0,c.y)(l,a,s),(0,c.C)(p,a,s),this.fullExtent=new h.Z({xmin:l[0],ymin:l[1],zmin:l[2],xmax:p[0],ymax:p[1],zmax:p[2],spatialReference:this.spatialReference})}else if(i.box&&this._verifyArray(i.box,12)){const e=i.box,t=(0,d.al)(e[0],e[1],e[2]),n=(0,d.al)(e[3],e[4],e[5]),o=(0,d.al)(e[6],e[7],e[8]),a=(0,d.al)(e[9],e[10],e[11]),s=[];for(let i=0;i<8;++i)s.push((0,d.Ue)());if((0,c.g)(s[0],t,n),(0,c.g)(s[0],s[0],o),(0,c.g)(s[0],s[0],a),(0,c.z)(s[1],t,n),(0,c.g)(s[1],s[1],o),(0,c.g)(s[1],s[1],a),(0,c.g)(s[2],t,n),(0,c.z)(s[2],s[2],o),(0,c.g)(s[2],s[2],a),(0,c.z)(s[3],t,n),(0,c.z)(s[3],s[3],o),(0,c.g)(s[3],s[3],a),(0,c.g)(s[4],t,n),(0,c.g)(s[4],s[4],o),(0,c.z)(s[4],s[4],a),(0,c.z)(s[5],t,n),(0,c.g)(s[5],s[5],o),(0,c.z)(s[5],s[5],a),(0,c.g)(s[6],t,n),(0,c.z)(s[6],s[6],o),(0,c.z)(s[6],s[6],a),(0,c.z)(s[7],t,n),(0,c.z)(s[7],s[7],o),(0,c.z)(s[7],s[7],a),r&&this._verifyArray(r,16)){const e=r;for(let t=0;t<8;++t)(0,c.e)(s[t],s[t],e)}const l=(0,d.al)(Number.MIN_VALUE,Number.MIN_VALUE,Number.MIN_VALUE),p=(0,d.al)(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE);for(let i=0;i<8;++i)(0,v.projectBuffer)(s[i],y.pn,0,s[i],m.Z.WGS84,0,1),(0,c.y)(p,p,s[i]),(0,c.C)(l,l,s[i]);this.fullExtent=new h.Z({xmin:p[0],ymin:p[1],zmin:p[2],xmax:l[0],ymax:l[1],zmax:l[2],spatialReference:this.spatialReference})}}async load(e){return this.addResolvingPromise(this._doLoad(e)),this}async _doLoad(e){const t=null!=e?e.signal:null;try{await this.loadFromPortal({supportedTypes:["3DTiles Service"],validateItem:e=>{var t;if(null!==(t=e.typeKeywords)&&void 0!==t&&t.includes("IntegratedMesh"))return!0;throw new o.Z("portal:invalid-layer-item-type","Invalid layer item, expected '${expectedType}' ",{expectedType:"3DTiles Service containing IntegratedMesh"})}},e)}catch(n){(0,p.r9)(n)}if(this.url){const e=(0,r.Z)(this.url,{query:{f:"json",...this.customParameters,token:this.apiKey},responseType:"json",signal:t}).then((e=>{this._initFullExtent(e.data)}),(e=>{(0,p.r9)(e)}));await e}}async fetchAttributionData(){return this.load().then((()=>({})))}_validateElevationInfo(){const e=this.elevationInfo,t="Integrated mesh 3d tiles layers";(0,E.LR)(a.Z.getLogger(this),(0,E.Uy)(t,"absolute-height",e)),(0,E.LR)(a.Z.getLogger(this),(0,E.kf)(t,e))}};(0,i._)([(0,u.Cb)({type:["IntegratedMesh3DTilesLayer"]})],L.prototype,"operationalLayerType",void 0),(0,i._)([(0,u.Cb)({type:m.Z})],L.prototype,"spatialReference",void 0),(0,i._)([(0,u.Cb)({type:h.Z})],L.prototype,"fullExtent",void 0),(0,i._)([(0,u.Cb)(A.PV)],L.prototype,"elevationInfo",null),(0,i._)([(0,u.Cb)({type:["show","hide"]})],L.prototype,"listMode",void 0),(0,i._)([(0,u.Cb)(A.HQ)],L.prototype,"url",void 0),(0,i._)([(0,u.Cb)({readOnly:!0})],L.prototype,"type",void 0),(0,i._)([(0,u.Cb)({type:String,json:{origins:{"web-scene":{read:!0,write:!0},"portal-item":{read:!0,write:!0}},read:!1}})],L.prototype,"path",void 0),(0,i._)([(0,u.Cb)({type:Number,json:{origins:{"web-scene":{name:"layerDefinition.minScale",write:()=>{},read:()=>{}},"portal-item":{name:"layerDefinition.minScale",write:()=>{},read:()=>{}}}}})],L.prototype,"minScale",void 0),(0,i._)([(0,u.Cb)({type:Number,json:{origins:{"web-scene":{name:"layerDefinition.maxScale",write:()=>{},read:()=>{}},"portal-item":{name:"layerDefinition.maxScale",write:()=>{},read:()=>{}}}}})],L.prototype,"maxScale",void 0),L=(0,i._)([(0,f.j)("esri.layers.IntegratedMesh3DTilesLayer")],L);const Z=L},74509:(e,t,n)=>{n.d(t,{LR:()=>l,Uy:()=>o,VW:()=>r,Wb:()=>a,kf:()=>s});n(68860),n(88152);function i(e){return e?p:u}function r(e,t){return function(e,t){return null!==t&&void 0!==t&&t.mode?t.mode:i(e).mode}(null!=e&&e.hasZ,t)}function o(e,t,n){return n&&n.mode!==t?"".concat(e," only support ").concat(t," elevation mode"):null}function a(e,t,n){return(null===n||void 0===n?void 0:n.mode)===t?"".concat(e," do not support ").concat(t," elevation mode"):null}function s(e,t){return null!=(null===t||void 0===t?void 0:t.featureExpressionInfo)&&"0"!==t.featureExpressionInfo.expression?"".concat(e," do not support featureExpressionInfo"):null}function l(e,t){t&&e.warn(".elevationInfo=",t)}const p={mode:"absolute-height",offset:0},u={mode:"on-the-ground",offset:null}}}]);
//# sourceMappingURL=2403.6ae94910.chunk.js.map